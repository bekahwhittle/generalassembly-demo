version: 2.1

orbs:
  hello-build: circleci/hello-build@0.0.14

executors:
  node:
    docker: 
      - image: circleci/node:latest

jobs:
  build: 
    executor:
      name: node
    working_directory: /tmp
    steps:
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo "my artifact file" > /tmp/artifact-1;
            mkdir /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/artifact-2;
      - store_artifacts:
          path: /tmp/artifact-1
          destination: artifact-file
      - store_artifacts:
          path: /tmp/artifacts

  test: 
    executor:
      name: node
    parallelism: 3
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run: npm install
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm test --test/test.js
      - store_test_results:
          path: test/results
      - store_artifacts:
          path: test 
    
  env_exp: 
    executor:
      name: node
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      # Run a step to setup an environment variable
      # Redirect MY_ENV_VAR into $BASH_ENV
      - run: 
          name: "Setup custom environment variables"
          command: echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV
      - run: # print the name of the branch we're on
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      # Run another step, the same as above; note that you can
      # invoke environment variable without curly braces.
      - run:
          name: "What branch am I on now?"
          command: echo $CIRCLE_BRANCH
      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}
      - run:
          name: "Print an env var stored in the Project"
          command: echo ${PROJECT_ENV_VAR}
      - run:
          name: "Print an env var stored in a Context"
          command: echo ${CONTEXT_ENV_VAR}


  approval:     
    executor:
      name: node
    steps: 
      - run: echo "please approve this job"

  deploy:     
    executor:
      name: node
    steps: 
      - run: echo "deploying"

workflows: 
  version: 2.1
  hello_world: 
    jobs: 
      - hello-build/hello-build
  build_test_deploy: 
    jobs: 
      - build
      - test: 
          requires: 
            - build
      - env_exp: 
          context: HASHICORP_DEMO
          requires: 
            - build
      - approval:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - approval

